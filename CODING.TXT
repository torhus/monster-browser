This program is written in the Digital Mars D programming language.  It should
be easy to pick up, due to its similarity to C/C++ and Java.

Runtime dependencies for the program:
https://github.com/torhus/monster-browser/files/9840031/monsterbrowser_deps-09g.zip

Useful links
------------
D compiler:
http://dlang.org/download.html
Currently I'm using DMD 2.100.2

D docs, support, etc.:
http://dlang.org

DUB is used for building (comes with DMD):
https://github.com/dlang/dub


Libraries used
--------------
ini.d (included in the source download):
http://www.dprogramming.com/ini.php

DWT GUI library. DWT is a D port of IBM's SWT 3.4.1 for Java.

https://github.com/d-widget-toolkit/dwt
https://help.eclipse.org/latest/topic/org.eclipse.platform.doc.isv/reference/api/org/eclipse/swt/package-summary.html

Building on Windows
-------------------
dub build --arch=x86

A final release is built like this:
dub build --arch=x86 --build=release --config=final --compiler=ldc2 --force

Building on Linux
-----------------
dub build


Version IDs
-----------
allservers - For benchmarking: don't filter servers on mod.
Final      - Use the real version number for release builds
             (common.FINAL_VERSION).
console    - Enable console output.  Logging will be done both to the console
             and the log file.
redirect   - Redirect stdout and stderr to the file CONSOLE.OUT.


Command line arguments (for testing/benchmarking)
-------------------------------------------------
dumplist  - Dump the list of addresses given to qstat to refreshlist.tmp.
dumpqstat - Dump qstat's raw output to qstat.out.
fromfile  - Get servers from disk instead of through the network.
norefresh - Don't refresh the server table GUI while receiving servers.
quit      - Print time since startup and then quit, after loading the server
            list from disk.


-----------
QStat is used for most communication with master and game servers:
https://github.com/Unity-Technologies/qstat


-torhu at yahoo com
